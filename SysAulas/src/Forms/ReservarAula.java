/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Gestores.AdministradorAulas;
import Gestores.AdministradorInterfaz;
import Gestores.AdministradorReservas;
import Gestores.AdministradorSesion;
import db.model.Bedel;
import db.model.Catedra;
import db.model.Dia;
import db.model.Docente;
import db.model.Esporadica;
import db.model.Fecha;
import db.model.InfoAulasDisponibles;
import db.model.InformacionSolicitante;
import db.model.Periodica;
import db.model.Periodo;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Laureano
 */
public class ReservarAula extends javax.swing.JFrame {

    
    String modo = "periodico";
    ArrayList<Fecha> fechas = new ArrayList<>(); //Para esporadica
    ArrayList<Dia> dias = new ArrayList<>(); //Para periodica
    
    ArrayList<Docente> docentes;
    ArrayList<Catedra> catedras;
    Integer indexDocente;
    Integer indexCatedra;
    
    /**
     * Creates new form RegistrarBedel
     */
    public ReservarAula() {
        initComponents();
        
        docentes = AdministradorReservas.getAllDocentes();
        indexDocente = 0;
        indexCatedra = 0;
        for (Docente d : docentes) {
            cmbDocente.addItem(d.getNombreDocente()+" "+d.getApellidoDocente());
        }
        
        cmbPeriodo.removeAllItems();
        cmbPeriodo.addItem("---Seleccione período---");
        ArrayList<String> pes = AdministradorReservas.getAllPeriodos();
        for (String s : pes) {
            cmbPeriodo.addItem(s);
        }
    }
    
    @Override
    public void setVisible(boolean b) {
        lblNombreBedel.setText(AdministradorSesion.getUsuarioActual().getNombreUsuario());
        super.setVisible(b);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbDuracion = new javax.swing.JComboBox<>();
        jMenuItem1 = new javax.swing.JMenuItem();
        lblReservar = new javax.swing.JLabel();
        lblSesion = new javax.swing.JLabel();
        lblNombreBedel = new javax.swing.JLabel();
        lblComplete = new javax.swing.JLabel();
        btnCerrarSesion = new javax.swing.JButton();
        pnlPeriodo = new javax.swing.JPanel();
        chkLunes = new javax.swing.JCheckBox();
        chkMartes = new javax.swing.JCheckBox();
        chkMiercoles = new javax.swing.JCheckBox();
        chkJueves = new javax.swing.JCheckBox();
        chkViernes = new javax.swing.JCheckBox();
        lblHoraInicio1 = new javax.swing.JLabel();
        txtHoraInicio1 = new javax.swing.JTextField();
        lblDuracion1 = new javax.swing.JLabel();
        cmbDuracion1 = new javax.swing.JComboBox<>();
        lblHoraInicio2 = new javax.swing.JLabel();
        txtHoraInicio2 = new javax.swing.JTextField();
        lblDuracion2 = new javax.swing.JLabel();
        cmbDuracion2 = new javax.swing.JComboBox<>();
        lblHoraInicio3 = new javax.swing.JLabel();
        txtHoraInicio3 = new javax.swing.JTextField();
        lblDuracion3 = new javax.swing.JLabel();
        cmbDuracion3 = new javax.swing.JComboBox<>();
        lblHoraInicio4 = new javax.swing.JLabel();
        txtHoraInicio4 = new javax.swing.JTextField();
        lblDuracion4 = new javax.swing.JLabel();
        cmbDuracion4 = new javax.swing.JComboBox<>();
        lblHoraInicio5 = new javax.swing.JLabel();
        txtHoraInicio5 = new javax.swing.JTextField();
        lblDuracion5 = new javax.swing.JLabel();
        cmbDuracion5 = new javax.swing.JComboBox<>();
        cmbPeriodo = new javax.swing.JComboBox<>();
        pnlFecha = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFechas = new javax.swing.JTable();
        lblHoraInicio6 = new javax.swing.JLabel();
        txtHoraInicio6 = new javax.swing.JTextField();
        lblDuracion6 = new javax.swing.JLabel();
        cmbDuracion6 = new javax.swing.JComboBox<>();
        txtFechaNueva = new javax.swing.JTextField();
        lblFechaNueva = new javax.swing.JLabel();
        btnAñadirFecha = new javax.swing.JButton();
        btnEliminarFecha = new javax.swing.JButton();
        btnPeriodo = new javax.swing.JButton();
        btnFecha = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        txtCantAlumnos = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        lblNombreSolicitante = new javax.swing.JLabel();
        btnSolicitar = new javax.swing.JButton();
        lblCatedra = new javax.swing.JLabel();
        lblTipoAula = new javax.swing.JLabel();
        lblCantAlumnos = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        cmbTipoAula = new javax.swing.JComboBox<>();
        cmbDocente = new javax.swing.JComboBox<>();
        cmbCatedra = new javax.swing.JComboBox<>();

        cmbDuracion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duración", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "4.5", "5", "5.5", "6" }));

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GateKeeper - Reservar Aula [BEDEL]");
        setResizable(false);
        setSize(new java.awt.Dimension(375, 660));
        setType(java.awt.Window.Type.UTILITY);

        lblReservar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblReservar.setText("Reservar Aula");

        lblSesion.setText("<html><u>Sesión Actual:</u></html>");

        lblNombreBedel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblNombreBedel.setText("Nombre_Bedel");

        lblComplete.setText("<html>Complete todos los campos para solicitar la reserva de un aula.</html>");

        btnCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/back_menu.png"))); // NOI18N
        btnCerrarSesion.setText("Volver al Menu");
        btnCerrarSesion.setToolTipText("Vuelva al menu de bedel");
        btnCerrarSesion.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnCerrarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCerrarSesionMouseClicked(evt);
            }
        });

        pnlPeriodo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Días Fijos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.SystemColor.textHighlight)); // NOI18N

        chkLunes.setText("Lunes");
        chkLunes.setAutoscrolls(true);

        chkMartes.setText("Martes");
        chkMartes.setAutoscrolls(true);

        chkMiercoles.setText("Miércoles");
        chkMiercoles.setAutoscrolls(true);

        chkJueves.setText("Jueves");
        chkJueves.setAutoscrolls(true);

        chkViernes.setText("Viernes");
        chkViernes.setAutoscrolls(true);

        lblHoraInicio1.setText("Hora Inicio");
        lblHoraInicio1.setAutoscrolls(true);

        txtHoraInicio1.setText("  :  ");
        txtHoraInicio1.setToolTipText("Ingrese la hora de inicio de la reserva");

        lblDuracion1.setText("Duración");
        lblDuracion1.setAutoscrolls(true);

        cmbDuracion1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duración", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "4.5", "5", "5.5", "6" }));

        lblHoraInicio2.setText("Hora Inicio");
        lblHoraInicio2.setAutoscrolls(true);

        txtHoraInicio2.setText("  :  ");
        txtHoraInicio2.setToolTipText("Ingrese la hora de inicio de la reserva");

        lblDuracion2.setText("Duración");
        lblDuracion2.setAutoscrolls(true);

        cmbDuracion2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duración", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "4.5", "5", "5.5", "6" }));

        lblHoraInicio3.setText("Hora Inicio");
        lblHoraInicio3.setAutoscrolls(true);

        txtHoraInicio3.setText("  :  ");
        txtHoraInicio3.setToolTipText("Ingrese la hora de inicio de la reserva");

        lblDuracion3.setText("Duración");
        lblDuracion3.setAutoscrolls(true);

        cmbDuracion3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duración", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "4.5", "5", "5.5", "6" }));

        lblHoraInicio4.setText("Hora Inicio");
        lblHoraInicio4.setAutoscrolls(true);

        txtHoraInicio4.setText("  :  ");
        txtHoraInicio4.setToolTipText("Ingrese la hora de inicio de la reserva");

        lblDuracion4.setText("Duración");
        lblDuracion4.setAutoscrolls(true);

        cmbDuracion4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duración", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "4.5", "5", "5.5", "6" }));

        lblHoraInicio5.setText("Hora Inicio");
        lblHoraInicio5.setAutoscrolls(true);

        txtHoraInicio5.setText("  :  ");
        txtHoraInicio5.setToolTipText("Ingrese la hora de inicio de la reserva");

        lblDuracion5.setText("Duración");
        lblDuracion5.setAutoscrolls(true);

        cmbDuracion5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duración", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "4.5", "5", "5.5", "6" }));

        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Seleccione período---", "PRIMER CUATRIMESTRE 2017", "SEGUNDO CUATRIMESTRE 2017", "ANUAL 2017", "PRIMER CUATRIMESTRE 2018", "SEGUNDO CUATRIMESTRE 2018", "ANUAL 2018" }));
        cmbPeriodo.setToolTipText("Seleccione el período por el que desea reservar el aula");

        javax.swing.GroupLayout pnlPeriodoLayout = new javax.swing.GroupLayout(pnlPeriodo);
        pnlPeriodo.setLayout(pnlPeriodoLayout);
        pnlPeriodoLayout.setHorizontalGroup(
            pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkViernes)
                    .addComponent(chkJueves)
                    .addComponent(chkMiercoles)
                    .addComponent(chkMartes)
                    .addComponent(chkLunes))
                .addGap(16, 16, 16)
                .addGroup(pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPeriodoLayout.createSequentialGroup()
                        .addGroup(pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblHoraInicio5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoraInicio5))
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblHoraInicio4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoraInicio4))
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblHoraInicio3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoraInicio3))
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblHoraInicio2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoraInicio2))
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblHoraInicio1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHoraInicio1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblDuracion4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbDuracion4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblDuracion2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbDuracion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblDuracion1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbDuracion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblDuracion5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbDuracion5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                                .addComponent(lblDuracion3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbDuracion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlPeriodoLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(cmbPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        pnlPeriodoLayout.setVerticalGroup(
            pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPeriodoLayout.createSequentialGroup()
                .addGroup(pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkLunes)
                    .addComponent(lblHoraInicio1)
                    .addComponent(txtHoraInicio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDuracion1)
                    .addComponent(cmbDuracion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkMartes)
                    .addComponent(lblHoraInicio2)
                    .addComponent(txtHoraInicio2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDuracion2)
                    .addComponent(cmbDuracion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkMiercoles, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHoraInicio3)
                    .addComponent(txtHoraInicio3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDuracion3)
                    .addComponent(cmbDuracion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkJueves)
                    .addComponent(lblHoraInicio4)
                    .addComponent(txtHoraInicio4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDuracion4)
                    .addComponent(cmbDuracion4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPeriodoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkViernes)
                    .addComponent(lblHoraInicio5)
                    .addComponent(txtHoraInicio5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDuracion5)
                    .addComponent(cmbDuracion5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlFecha.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Días Específicos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), java.awt.SystemColor.textHighlight)); // NOI18N
        pnlFecha.setEnabled(false);

        jScrollPane1.setEnabled(false);

        tblFechas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dia", "Fecha", "Hora Inicio", "Duracion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFechas);

        lblHoraInicio6.setText("Hora Inicio");
        lblHoraInicio6.setAutoscrolls(true);
        lblHoraInicio6.setEnabled(false);

        txtHoraInicio6.setText("  :  ");
        txtHoraInicio6.setToolTipText("Ingrese la hora de inicio de la reserva");
        txtHoraInicio6.setEnabled(false);

        lblDuracion6.setText("Duración");
        lblDuracion6.setAutoscrolls(true);
        lblDuracion6.setEnabled(false);

        cmbDuracion6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Duración", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "4.5", "5", "5.5", "6" }));
        cmbDuracion6.setEnabled(false);

        txtFechaNueva.setText("  /  /    ");
        txtFechaNueva.setEnabled(false);

        lblFechaNueva.setText("Fecha");
        lblFechaNueva.setEnabled(false);

        btnAñadirFecha.setText("Añadir");
        btnAñadirFecha.setEnabled(false);
        btnAñadirFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAñadirFechaMouseClicked(evt);
            }
        });

        btnEliminarFecha.setText("Eliminar");
        btnEliminarFecha.setEnabled(false);
        btnEliminarFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarFechaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlFechaLayout = new javax.swing.GroupLayout(pnlFecha);
        pnlFecha.setLayout(pnlFechaLayout);
        pnlFechaLayout.setHorizontalGroup(
            pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFechaLayout.createSequentialGroup()
                .addGroup(pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFechaLayout.createSequentialGroup()
                        .addGroup(pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlFechaLayout.createSequentialGroup()
                                .addComponent(lblFechaNueva)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFechaNueva))
                            .addGroup(pnlFechaLayout.createSequentialGroup()
                                .addComponent(lblHoraInicio6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtHoraInicio6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblDuracion6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbDuracion6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminarFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                            .addComponent(btnAñadirFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(1, 1, 1))
        );
        pnlFechaLayout.setVerticalGroup(
            pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFechaLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFechaNueva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFechaNueva)
                    .addComponent(btnAñadirFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlFechaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHoraInicio6)
                    .addComponent(txtHoraInicio6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDuracion6)
                    .addComponent(cmbDuracion6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarFecha))
                .addContainerGap())
        );

        btnPeriodo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/calendar_period.png"))); // NOI18N
        btnPeriodo.setText("Por Período");
        btnPeriodo.setToolTipText("Solicite la reserva de un aula por un determinado período de tiempo");
        btnPeriodo.setIconTextGap(6);
        btnPeriodo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPeriodoMouseClicked(evt);
            }
        });

        btnFecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/calendar_date.png"))); // NOI18N
        btnFecha.setText("Por Fecha");
        btnFecha.setToolTipText("Solicite un aula de manera esporádica para una fecha en particular");
        btnFecha.setIconTextGap(6);
        btnFecha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFechaMouseClicked(evt);
            }
        });

        jPanel1.setToolTipText("");

        txtCantAlumnos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtCantAlumnos.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        txtCantAlumnos.setToolTipText("Ingrese la cantidad de alumnos");

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("Cancele el ingreso de los datos");
        btnCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelarMouseClicked(evt);
            }
        });

        lblNombreSolicitante.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNombreSolicitante.setText("Nombre del Solicitante");

        btnSolicitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/solicitate.png"))); // NOI18N
        btnSolicitar.setText("Solicitar");
        btnSolicitar.setToolTipText("Solicite la reserva del aula y obtenga su disponibilidad");
        btnSolicitar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSolicitarMouseClicked(evt);
            }
        });

        lblCatedra.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCatedra.setText("Nombre de la Cátedra");

        lblTipoAula.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTipoAula.setText("Tipo de Aula");

        lblCantAlumnos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCantAlumnos.setText("Cantidad de Alumnos");

        lblEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblEmail.setText("Email de Contacto");

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtEmail.setForeground(javax.swing.UIManager.getDefaults().getColor("Button.darkShadow"));
        txtEmail.setText("usuario@dominio.com");
        txtEmail.setToolTipText("Ingrese un correo electrónico de contacto");
        txtEmail.setEnabled(false);

        cmbTipoAula.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbTipoAula.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aula", "Multimedios", "Informática", "Sin Recursos" }));
        cmbTipoAula.setToolTipText("Seleccione el tipo de aula");

        cmbDocente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Docente" }));
        cmbDocente.setToolTipText("");
        cmbDocente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDocenteActionPerformed(evt);
            }
        });

        cmbCatedra.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cátedra" }));
        cmbCatedra.setToolTipText("");
        cmbCatedra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCatedraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNombreSolicitante)
                        .addGap(18, 18, 18)
                        .addComponent(cmbDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCatedra)
                            .addComponent(lblEmail))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                            .addComponent(cmbCatedra, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSolicitar, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCantAlumnos)
                            .addComponent(lblTipoAula))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCantAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(cmbTipoAula, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreSolicitante)
                    .addComponent(cmbDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCantAlumnos)
                    .addComponent(txtCantAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipoAula)
                    .addComponent(cmbTipoAula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCatedra)
                    .addComponent(cmbCatedra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSolicitar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblReservar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCerrarSesion))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblNombreBedel))
                            .addComponent(lblComplete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlPeriodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPeriodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblReservar)
                    .addComponent(btnCerrarSesion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombreBedel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblComplete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPeriodo)
                    .addComponent(btnFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlPeriodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("Datos Generales");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarSesionMouseClicked
        AdministradorInterfaz.getMenuBedel().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCerrarSesionMouseClicked

    private void btnPeriodoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPeriodoMouseClicked
        chkLunes.setEnabled(true);
        chkMartes.setEnabled(true);
        chkMiercoles.setEnabled(true);
        chkJueves.setEnabled(true);
        chkViernes.setEnabled(true);
        txtHoraInicio1.setEnabled(true);
        txtHoraInicio2.setEnabled(true);
        txtHoraInicio3.setEnabled(true);
        txtHoraInicio4.setEnabled(true);
        txtHoraInicio5.setEnabled(true);
        cmbDuracion1.setEnabled(true);
        cmbDuracion2.setEnabled(true);
        cmbDuracion3.setEnabled(true);
        cmbDuracion4.setEnabled(true);
        cmbDuracion5.setEnabled(true);
        cmbPeriodo.setEnabled(true);
        pnlPeriodo.setEnabled(true);
        lblHoraInicio1.setEnabled(true);
        lblHoraInicio2.setEnabled(true);
        lblHoraInicio3.setEnabled(true);
        lblHoraInicio4.setEnabled(true);
        lblHoraInicio5.setEnabled(true);
        lblDuracion1.setEnabled(true);
        lblDuracion2.setEnabled(true);
        lblDuracion3.setEnabled(true);
        lblDuracion4.setEnabled(true);
        lblDuracion5.setEnabled(true);
        
        if (modo == "especifico") {
            pnlFecha.setEnabled(false);
            tblFechas.setEnabled(false);
            lblDuracion6.setEnabled(false);
            cmbDuracion6.setEnabled(false);
            txtFechaNueva.setEnabled(false);
            lblFechaNueva.setEnabled(false);
            txtHoraInicio6.setEnabled(false);
            lblHoraInicio6.setEnabled(false);
            btnAñadirFecha.setEnabled(false);
            btnEliminarFecha.setEnabled(false);
            
            modo ="periodico";
        }
    }//GEN-LAST:event_btnPeriodoMouseClicked

    private void btnFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFechaMouseClicked
        pnlFecha.setEnabled(true);
        tblFechas.setEnabled(true);
        lblDuracion6.setEnabled(true);
        cmbDuracion6.setEnabled(true);
        txtFechaNueva.setEnabled(true);
        lblFechaNueva.setEnabled(true);
        txtHoraInicio6.setEnabled(true);
        lblHoraInicio6.setEnabled(true);
        btnAñadirFecha.setEnabled(true);
        btnEliminarFecha.setEnabled(true);
        
        if (modo == "periodico") {
            chkLunes.setEnabled(false);
            chkMartes.setEnabled(false);
            chkMiercoles.setEnabled(false);
            chkJueves.setEnabled(false);
            chkViernes.setEnabled(false);
            txtHoraInicio1.setEnabled(false);
            txtHoraInicio2.setEnabled(false);
            txtHoraInicio3.setEnabled(false);
            txtHoraInicio4.setEnabled(false);
            txtHoraInicio5.setEnabled(false);
            cmbDuracion1.setEnabled(false);
            cmbDuracion2.setEnabled(false);
            cmbDuracion3.setEnabled(false);
            cmbDuracion4.setEnabled(false);
            cmbDuracion5.setEnabled(false);
            cmbPeriodo.setEnabled(false);
            pnlPeriodo.setEnabled(false);
            lblHoraInicio1.setEnabled(false);
            lblHoraInicio2.setEnabled(false);
            lblHoraInicio3.setEnabled(false);
            lblHoraInicio4.setEnabled(false);
            lblHoraInicio5.setEnabled(false);
            lblDuracion1.setEnabled(false);
            lblDuracion2.setEnabled(false);
            lblDuracion3.setEnabled(false);
            lblDuracion4.setEnabled(false);
            lblDuracion5.setEnabled(false);
            modo = "especifico";
        }
    }//GEN-LAST:event_btnFechaMouseClicked

    private void btnSolicitarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSolicitarMouseClicked
        if (cmbTipoAula.getSelectedIndex() == 0 ) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado un tipo de aula", "Error cargando los datos", JOptionPane.ERROR_MESSAGE);
        } else if (!esInteger(txtCantAlumnos.getText())) {
            JOptionPane.showMessageDialog(this, "La cantidad de alumnos ingresada no es valida", "Error cargando los datos", JOptionPane.ERROR_MESSAGE);
        } else if (indexDocente+1 == 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un docente solicitante", "Error cargando los datos", JOptionPane.ERROR_MESSAGE);
        } else if (indexCatedra+1 == -1 || indexCatedra+1 == 0) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una catedra del solicitante", "Error cargando los datos", JOptionPane.ERROR_MESSAGE);
        } else {
            if (modo == "periodico") {
                //Validacion de datos

                Boolean[] diasSelect = {chkLunes.isSelected(), chkMartes.isSelected(), chkMiercoles.isSelected(), chkJueves.isSelected(), chkViernes.isSelected()};
                String[] diasNombre = {"Lunes", "Martes", "Miercoles", "Jueves", "Viernes"};
                String[] diasHoraInicio = {txtHoraInicio1.getText(),txtHoraInicio2.getText(),txtHoraInicio3.getText(),txtHoraInicio4.getText(),txtHoraInicio5.getText()};
                Integer[] diasDuracion = {cmbDuracion1.getSelectedIndex(), cmbDuracion2.getSelectedIndex(), cmbDuracion3.getSelectedIndex(), cmbDuracion4.getSelectedIndex(), cmbDuracion5.getSelectedIndex()};


                boolean datosValidos = true;
                for(int i=0; i<diasSelect.length; i++) {
                    if (diasSelect[i]) {
                        if (!diasHoraInicio[i].matches("([01]?[0-9]|2[0-3]):[0-5][0-9]")) {
                            datosValidos = false;
                        }
                        if (diasDuracion[i] == 0) {
                            datosValidos = false;
                        }
                    }
                }
                if (cmbPeriodo.getSelectedIndex() == 0) {
                    datosValidos = false;
                }
                Periodo periodo = AdministradorReservas.buscarPeriodo(cmbPeriodo.getSelectedIndex());
                
                if (periodo.getFechaFin().compareTo(new Date()) < 0) {
                    JOptionPane.showMessageDialog(this,"El periodo seleccionado ya ha terminado, no puede realizar reservas para el mismo","Advertencia",JOptionPane.WARNING_MESSAGE);
                    datosValidos = false;
                }
                
                //Creacion de datos
                if (datosValidos) {
                    if (periodo.getFechaInicio().compareTo(new Date()) < 0 && periodo.getFechaFin().compareTo(new Date()) > 0) {
                        JOptionPane.showMessageDialog(this,"El periodo seleccionado ya ha empezado, se tomarán las fecha a partir de hoy","Advertencia",JOptionPane.WARNING_MESSAGE);
                    }
                    
                    if (Arrays.asList(diasSelect).contains(true)) {
                        //Generar dias y fechas
                        for(int i=0; i<diasSelect.length; i++) {
                            if (diasSelect[i]) {
                                Dia nuevoDia = null;
                                try {
                                    nuevoDia = AdministradorReservas.generarDiaYFechas(periodo, diasNombre[i], diasHoraInicio[i], diasDuracion[i]);
                                } catch (ParseException ex) {
                                    Logger.getLogger(ReservarAula.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                dias.add(nuevoDia);
                            }
                        }
                        String tipo = null;
                        switch(cmbTipoAula.getSelectedIndex()) {
                            case 1: tipo  = "multi";
                                break;
                            case 2: tipo = "info";
                                break;
                            case 3: tipo = "sinrec";
                                break;
                        }

                        InformacionSolicitante infoSo = new InformacionSolicitante(txtEmail.getText(), tipo, cmbPeriodo.getSelectedIndex());


                        Periodica nuevaReserva = new Periodica();
                        nuevaReserva.setCantidadAlumnos(Integer.parseInt(txtCantAlumnos.getText()));
                        nuevaReserva.setPeriodo(periodo);
                        nuevaReserva.setCatedra(catedras.get(indexCatedra));
                        nuevaReserva.setDocente(docentes.get(indexDocente));
                        nuevaReserva.setBedel((Bedel) AdministradorSesion.getUsuarioActual());
                        nuevaReserva.setDias(new HashSet(dias));
                        //System.out.print(dias);

                        ArrayList<InfoAulasDisponibles> opciones = AdministradorAulas.obtenerAulas(nuevaReserva, infoSo.getTipoAula());


                        AdministradorInterfaz.getObtenerDisp().setVisible(true);
                        AdministradorInterfaz.getObtenerDisp().enviarInformacionPeriodica(nuevaReserva, opciones, infoSo);
                    } else {
                        JOptionPane.showMessageDialog(this, "Debe tener al menos un dia seleccionado para la reserva", "Error cargando los datos", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Algun dato relacionado con los dias o el periodo es invalido", "Error cargando los datos", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                if (tblFechas.getRowCount() > 0){
                    Esporadica nuevaReserva = new Esporadica();
                    for(Fecha f : fechas) {
                        f.setEsporadica(nuevaReserva);
                    }
                    nuevaReserva.setFechas(new HashSet(fechas));
                    nuevaReserva.setCatedra(catedras.get(indexCatedra));
                    nuevaReserva.setDocente(docentes.get(indexDocente));
                    nuevaReserva.setBedel((Bedel) AdministradorSesion.getUsuarioActual());
                    nuevaReserva.setCantidadAlumnos(Integer.parseInt(txtCantAlumnos.getText()));

                    String tipo = null;
                    switch(cmbTipoAula.getSelectedIndex()) {
                        case 1: tipo  = "multi";
                            break;
                        case 2: tipo = "info";
                            break;
                        case 3: tipo = "sinrec";
                            break;
                    }

                    InformacionSolicitante infoSo = new InformacionSolicitante(txtEmail.getText(), tipo, cmbPeriodo.getSelectedIndex());

                    ArrayList<InfoAulasDisponibles> opciones = AdministradorAulas.obtenerAulas(nuevaReserva, infoSo.getTipoAula());


                    AdministradorInterfaz.getObtenerDisp().setVisible(true);
                    AdministradorInterfaz.getObtenerDisp().enviarInformacionEsporadica(nuevaReserva, opciones, infoSo);

                } else {
                    JOptionPane.showMessageDialog(this, "Debe añadir al menos una fecha para la reserva", "Error cargando los datos", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnSolicitarMouseClicked

    private void btnAñadirFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAñadirFechaMouseClicked
        Fecha nuevaFecha = new Fecha();
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        format.setLenient(false);
        Date date = null;
        Dia nuevoDia = new Dia();
        try {
            
            if (!txtHoraInicio6.getText().matches("([01]?[0-9]|2[0-3]):[0-5][0-9]")) {
                throw new IllegalArgumentException();
            }
            date = format.parse(txtFechaNueva.getText() +" "+ txtHoraInicio6.getText());
            
            Calendar cal = Calendar.getInstance();
            cal.setLenient(false);
            cal.setTime(date);
            cal.getTime();
            
            nuevaFecha.setFecha(new java.sql.Date(date.getTime()));
            long ms = date.getTime();
            Time time = new Time(ms);
            nuevaFecha.setHoraInicio(time);
            //y = 500+500*(x-1) --> x=3 --> y = 500+500*2 = 1500
            nuevaFecha.setDuracion(500+500*(cmbDuracion6.getSelectedIndex()-1));
            
            Calendar c = Calendar.getInstance();
            c.setTime(date);
            int dayOfWeek = c.get(Calendar.DAY_OF_WEEK);
            
            String[] dias = {"Domingo", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado"};
            
            nuevoDia.addFecha(nuevaFecha);
            nuevaFecha.setDia(nuevoDia);
            
            nuevoDia.setNombreDia(dias[dayOfWeek]);
            
            //Para evitar fechas repetidas
            for(Fecha f: fechas) {
                if (nuevaFecha.getFecha().equals(f.getFecha()) && nuevaFecha.getHoraInicio().equals(f.getHoraInicio())) {
                    throw new IllegalStateException();
                }
            }//

            fechas.add(nuevaFecha);
            DefaultTableModel model = (DefaultTableModel) tblFechas.getModel();
            
            model.addRow(new Object[]{nuevoDia.getNombreDia(),txtFechaNueva.getText(), txtHoraInicio6.getText(), String.format("%.1f", (double) cmbDuracion6.getSelectedIndex()/2)+" h"});
            
            
        } catch (ParseException | IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this, "Formato de fecha u hora de inicio invalido", "Error cargando los datos", JOptionPane.ERROR_MESSAGE);
            //Logger.getLogger(ReservarAula.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalStateException ex) {
            JOptionPane.showMessageDialog(this, "Esta fecha ya ha sido sido agregada", "Error cargando los datos", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_btnAñadirFechaMouseClicked

    private void btnEliminarFechaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarFechaMouseClicked
        if (tblFechas.getSelectedRow() != -1) {
            fechas.remove(tblFechas.getSelectedRow());
        ((DefaultTableModel) tblFechas.getModel()).removeRow(tblFechas.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar la fecha que desea eliminar", "Error eliminando datos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarFechaMouseClicked

    private void btnCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelarMouseClicked
        Integer respuesta = JOptionPane.showConfirmDialog(null, "Seguro que desea borrar los datos del solicitante ingresados?", "Cancelar?",  JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            
            txtEmail.setText("usuario@dominio.com");
            txtCantAlumnos.setText("");
            cmbTipoAula.setSelectedIndex(0);
            cmbDocente.setSelectedIndex(0);
            cmbCatedra.removeAllItems();
            cmbCatedra.addItem("Cátedra");
            cmbCatedra.setSelectedIndex(0);
            JOptionPane.showMessageDialog(this, "Datos borrados con exito!");
        }
    }//GEN-LAST:event_btnCancelarMouseClicked

    private void cmbDocenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDocenteActionPerformed
        if (cmbDocente.getSelectedIndex() != 0) {
            if (indexDocente != cmbDocente.getSelectedIndex()-1) {
                txtEmail.setText(docentes.get(cmbDocente.getSelectedIndex()-1).getEmailDocente());
                catedras = AdministradorReservas.getAllCatedrasDeDocente(docentes.get(cmbDocente.getSelectedIndex()-1));
                cmbCatedra.removeAllItems();
                cmbCatedra.addItem("Cátedra");
                for (Catedra c : catedras) {
                    cmbCatedra.addItem(c.getNombreCatedra());
                }
                indexDocente = cmbDocente.getSelectedIndex()-1;
            }
        } else {
            if (cmbDocente.getSelectedIndex() != indexDocente) {
                cmbCatedra.removeAllItems();
                cmbCatedra.addItem("Cátedra");
                txtEmail.setText("usuario@dominio.com");
                catedras = null;
                txtCantAlumnos.setText("");
                cmbTipoAula.setSelectedIndex(0);
                cmbCatedra.setSelectedIndex(0);
                indexDocente = cmbDocente.getSelectedIndex();
            }
        }
        
    }//GEN-LAST:event_cmbDocenteActionPerformed

    private void cmbCatedraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCatedraActionPerformed
        indexCatedra = cmbCatedra.getSelectedIndex()-1;
    }//GEN-LAST:event_cmbCatedraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservarAula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservarAula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservarAula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservarAula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservarAula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadirFecha;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnEliminarFecha;
    private javax.swing.JButton btnFecha;
    private javax.swing.JButton btnPeriodo;
    private javax.swing.JButton btnSolicitar;
    private javax.swing.JCheckBox chkJueves;
    private javax.swing.JCheckBox chkLunes;
    private javax.swing.JCheckBox chkMartes;
    private javax.swing.JCheckBox chkMiercoles;
    private javax.swing.JCheckBox chkViernes;
    private javax.swing.JComboBox<String> cmbCatedra;
    private javax.swing.JComboBox<String> cmbDocente;
    private javax.swing.JComboBox<String> cmbDuracion;
    private javax.swing.JComboBox<String> cmbDuracion1;
    private javax.swing.JComboBox<String> cmbDuracion2;
    private javax.swing.JComboBox<String> cmbDuracion3;
    private javax.swing.JComboBox<String> cmbDuracion4;
    private javax.swing.JComboBox<String> cmbDuracion5;
    private javax.swing.JComboBox<String> cmbDuracion6;
    private javax.swing.JComboBox<String> cmbPeriodo;
    private javax.swing.JComboBox<String> cmbTipoAula;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCantAlumnos;
    private javax.swing.JLabel lblCatedra;
    private javax.swing.JLabel lblComplete;
    private javax.swing.JLabel lblDuracion1;
    private javax.swing.JLabel lblDuracion2;
    private javax.swing.JLabel lblDuracion3;
    private javax.swing.JLabel lblDuracion4;
    private javax.swing.JLabel lblDuracion5;
    private javax.swing.JLabel lblDuracion6;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFechaNueva;
    private javax.swing.JLabel lblHoraInicio1;
    private javax.swing.JLabel lblHoraInicio2;
    private javax.swing.JLabel lblHoraInicio3;
    private javax.swing.JLabel lblHoraInicio4;
    private javax.swing.JLabel lblHoraInicio5;
    private javax.swing.JLabel lblHoraInicio6;
    private javax.swing.JLabel lblNombreBedel;
    private javax.swing.JLabel lblNombreSolicitante;
    private javax.swing.JLabel lblReservar;
    private javax.swing.JLabel lblSesion;
    private javax.swing.JLabel lblTipoAula;
    private javax.swing.JPanel pnlFecha;
    private javax.swing.JPanel pnlPeriodo;
    private javax.swing.JTable tblFechas;
    private javax.swing.JTextField txtCantAlumnos;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFechaNueva;
    private javax.swing.JTextField txtHoraInicio1;
    private javax.swing.JTextField txtHoraInicio2;
    private javax.swing.JTextField txtHoraInicio3;
    private javax.swing.JTextField txtHoraInicio4;
    private javax.swing.JTextField txtHoraInicio5;
    private javax.swing.JTextField txtHoraInicio6;
    // End of variables declaration//GEN-END:variables

    public static boolean esInteger(String str) {
        if (str == null) {
            return false;
        }
        int length = str.length();
        if (length == 0) {
            return false;
        }
        int i = 0;
        if (str.charAt(0) == '-') {
            //if (length == 1) {
                return false;
            /*}
            i = 1;*/
        }
        for (; i < length; i++) {
            char c = str.charAt(i);
            if (c < '0' || c > '9') {
                return false;
            }
        }
        return true;
    }
    
    public void resetearDias() {
        dias = new ArrayList<>(); //Para periodica
    }
}